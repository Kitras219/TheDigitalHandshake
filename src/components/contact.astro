---
// Komponent sekcji formularza kontaktowego
---

<section id="kontakt" class="py-24 sm:py-32 bg-zinc-900">
  <div class="container mx-auto px-4">
    <!-- Nagłówek sekcji -->
    <div class="text-center max-w-2xl mx-auto mb-16">
      <h2 class="text-3xl sm:text-4xl font-bold">Skontaktuj się ze mną</h2>
      <p class="mt-4 text-lg text-white/70">
        Masz pytanie lub propozycję współpracy? Wypełnij formularz, a odpowiem
        najszybciej jak to możliwe.
      </p>
    </div>

    <!-- Formularz -->
    <form id="contact-form" class="max-w-xl mx-auto">
      <div class="space-y-6">
        <!-- Pole Imię -->
        <div>
          <label for="name" class="block text-sm font-medium text-white/80 mb-2"
            >Imię i Nazwisko</label
          >
          <input
            type="text"
            name="name"
            id="name"
            required
            class="block w-full bg-zinc-800 border border-white/10 rounded-md shadow-sm py-3 px-4 focus:outline-none focus:ring-2 focus:ring-amber-400 focus:border-amber-400 transition"
          />
        </div>
        <!-- Pole Email -->
        <div>
          <label
            for="email"
            class="block text-sm font-medium text-white/80 mb-2"
            >Adres Email</label
          >
          <input
            type="email"
            name="email"
            id="email"
            required
            class="block w-full bg-zinc-800 border border-white/10 rounded-md shadow-sm py-3 px-4 focus:outline-none focus:ring-2 focus:ring-amber-400 focus:border-amber-400 transition"
          />
        </div>
        <!-- Pole Wiadomość -->
        <div>
          <label
            for="message"
            class="block text-sm font-medium text-white/80 mb-2"
            >Wiadomość</label
          >
          <textarea
            name="message"
            id="message"
            rows="4"
            required
            class="block w-full bg-zinc-800 border border-white/10 rounded-md shadow-sm py-3 px-4 focus:outline-none focus:ring-2 focus:ring-amber-400 focus:border-amber-400 transition resize-none"
          ></textarea>
        </div>
        <!-- Przycisk Wyślij -->
        <div class="text-center">
          <button
            type="submit"
            id="submit-btn"
            class="bg-amber-400 hover:bg-amber-500 text-zinc-900 font-bold py-3 px-8 rounded-md transition-colors duration-300 text-lg w-full sm:w-auto"
          >
            Wyślij Wiadomość
          </button>
        </div>
      </div>
      <!-- Miejsce na komunikaty o statusie wysyłki -->
      <p id="form-status" class="text-center mt-4 h-6"></p>
    </form>
  </div>
</section>

<script>
  // Dokładnie określamy typy elementów, które pobieramy z DOM
  const form = document.getElementById("contact-form") as HTMLFormElement;
  const statusMessage = document.getElementById(
    "form-status"
  ) as HTMLParagraphElement;
  const submitBtn = document.getElementById("submit-btn") as HTMLButtonElement;

  if (form && statusMessage && submitBtn) {
    form.addEventListener("submit", async (e) => {
      e.preventDefault(); // Zatrzymujemy domyślną akcję przeładowania strony

      const formData = new FormData(form);
      const originalBtnText = submitBtn.innerText;

      // Informujemy użytkownika, że coś się dzieje
      submitBtn.innerText = "Wysyłanie...";
      submitBtn.disabled = true;
      statusMessage.textContent = "";
      statusMessage.classList.remove("text-green-400", "text-red-400");

      try {
        const response = await fetch("/api/send-email", {
          method: "POST",
          body: formData,
        });

        const result = await response.json();

        if (response.ok) {
          statusMessage.textContent = result.message;
          statusMessage.classList.add("text-green-400");
          form.reset(); // Teraz TypeScript wie, że .reset() jest dostępne
        } else {
          statusMessage.textContent = result.message || "Wystąpił błąd.";
          statusMessage.classList.add("text-red-400");
        }
      } catch (error) {
        statusMessage.textContent = "Błąd sieci. Spróbuj ponownie później.";
        statusMessage.classList.add("text-red-400");
      } finally {
        // Przywracamy przycisk do stanu początkowego
        submitBtn.innerText = originalBtnText;
        submitBtn.disabled = false; // Teraz TypeScript wie, że .disabled jest dostępne
      }
    });
  }
</script>
